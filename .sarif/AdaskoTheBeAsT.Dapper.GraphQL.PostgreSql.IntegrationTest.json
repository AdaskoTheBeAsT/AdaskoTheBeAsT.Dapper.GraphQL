{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "4.12.0.0",
        "fileVersion": "4.12.0-3.24523.10 (16f58fa3)",
        "semanticVersion": "4.12.0",
        "language": "en-US"
      },
      "results": [
        {
          "ruleId": "CC0021",
          "level": "error",
          "message": "Use 'nameof(Person)' instead of specifying the program element name.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/Repositories/PersonRepository.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 42,
                  "endLine": 20,
                  "endColumn": 50
                }
              }
            }
          ]
        },
        {
          "ruleId": "CC0021",
          "level": "error",
          "message": "Use 'nameof(PhoneType)' instead of specifying the program element name.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PhoneEnumType.cs",
                "region": {
                  "startLine": 11,
                  "startColumn": 20,
                  "endLine": 11,
                  "endColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 13,
                  "endLine": 190,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0051",
          "level": "error",
          "message": "Method is too long (172 lines; maximum allowed: 60)",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 27,
                  "endLine": 19,
                  "endColumn": 47
                }
              }
            }
          ]
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 13,
                  "endLine": 72,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1266",
          "level": "note",
          "message": "Use raw string literal",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 32,
                  "endLine": 72,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 192,
                  "startColumn": 13,
                  "endLine": 192,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 13,
                  "endLine": 275,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1256",
          "level": "note",
          "message": "Invalid argument null check",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/Repositories/PersonRepositoryExtensions.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 9,
                  "endLine": 18,
                  "endColumn": 11
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 13,
                  "endLine": 228,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1175",
          "level": "note",
          "message": "Unused 'this' parameter 'personRepository'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/Repositories/PersonRepositoryExtensions.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 9,
                  "endLine": 12,
                  "endColumn": 48
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 291,
                  "startColumn": 13,
                  "endLine": 309,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonInputType.cs",
                "region": {
                  "startLine": 12,
                  "startColumn": 13,
                  "endLine": 12,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonInputType.cs",
                "region": {
                  "startLine": 13,
                  "startColumn": 13,
                  "endLine": 13,
                  "endColumn": 47
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/EmailType.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 13,
                  "endLine": 15,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/EmailType.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 13,
                  "endLine": 19,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/QueryTests.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 17,
                  "endLine": 39,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 326,
                  "startColumn": 13,
                  "endLine": 335,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 13,
                  "endLine": 254,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1266",
          "level": "note",
          "message": "Use raw string literal",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 254,
                  "startColumn": 32,
                  "endLine": 254,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 291,
                  "startColumn": 13,
                  "endLine": 291,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 13,
                  "endLine": 207,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1266",
          "level": "note",
          "message": "Use raw string literal",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 207,
                  "startColumn": 32,
                  "endLine": 207,
                  "endColumn": 34
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/QueryTests.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 17,
                  "endLine": 39,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 230,
                  "startColumn": 13,
                  "endLine": 230,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 311,
                  "startColumn": 13,
                  "endLine": 311,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/CompanyType.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 13,
                  "endLine": 15,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/CompanyType.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 13,
                  "endLine": 19,
                  "endColumn": 43
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/CompanyType.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 13,
                  "endLine": 23,
                  "endColumn": 54
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/CompanyType.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 54
                }
              }
            }
          ]
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/UpdateTests.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 17,
                  "endLine": 38,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMapContextTests.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 13,
                  "endLine": 82,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1058",
          "level": "note",
          "message": "Use compound assignment",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMappers/PersonEntityMapper.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 17,
                  "endLine": 72,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1058",
          "level": "note",
          "message": "Use compound assignment",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMappers/PersonEntityMapper.cs",
                "region": {
                  "startLine": 73,
                  "startColumn": 17,
                  "endLine": 73,
                  "endColumn": 83
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0051",
          "level": "error",
          "message": "Method is too long (71 lines; maximum allowed: 60)",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/UpdateTests.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 21,
                  "endLine": 20,
                  "endColumn": 33
                }
              }
            }
          ]
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/UpdateTests.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 17,
                  "endLine": 32,
                  "endColumn": 20
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 326,
                  "startColumn": 13,
                  "endLine": 326,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0076",
          "level": "note",
          "message": "Do not use implicit culture-sensitive ToString in interpolated strings",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/Repositories/PersonRepository.cs",
                "region": {
                  "startLine": 62,
                  "startColumn": 74,
                  "endLine": 62,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1163",
          "level": "note",
          "message": "Unused parameter 'personQueryBuilder'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonMutation.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 31,
                  "endLine": 15,
                  "endColumn": 71
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 25,
                  "endLine": 38,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PhoneType.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 13,
                  "endLine": 15,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PhoneType.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 13,
                  "endLine": 19,
                  "endColumn": 45
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PhoneType.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 13,
                  "endLine": 23,
                  "endColumn": 41
                }
              }
            }
          ]
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 21,
                  "endLine": 61,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 21,
                  "endLine": 87,
                  "endColumn": 42
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 362,
                  "startColumn": 13,
                  "endLine": 390,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0051",
          "level": "error",
          "message": "Method is too long (105 lines; maximum allowed: 60)",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMapContextTests.cs",
                "region": {
                  "startLine": 20,
                  "startColumn": 21,
                  "endLine": 20,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/QueryTests.cs",
                "region": {
                  "startLine": 32,
                  "startColumn": 13,
                  "endLine": 50,
                  "endColumn": 15
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/QueryTests.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 13,
                  "endLine": 26,
                  "endColumn": 94
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMapContextTests.cs",
                "region": {
                  "startLine": 66,
                  "startColumn": 13,
                  "endLine": 66,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 362,
                  "startColumn": 13,
                  "endLine": 362,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLInsertTests.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 46,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/UpdateTests.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 21,
                  "endLine": 120,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLInsertTests.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 13,
                  "endLine": 38,
                  "endColumn": 16
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "AsyncifyVariable",
          "level": "error",
          "message": "This variable access could benefit from the use of Task async.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 26,
                  "endLine": 142,
                  "endColumn": 46
                }
              }
            }
          ]
        },
        {
          "ruleId": "AsyncifyVariable",
          "level": "error",
          "message": "This variable access could benefit from the use of Task async.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 31,
                  "endLine": 143,
                  "endColumn": 56
                }
              }
            }
          ]
        },
        {
          "ruleId": "AsyncifyVariable",
          "level": "error",
          "message": "This variable access could benefit from the use of Task async.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 35,
                  "endLine": 144,
                  "endColumn": 64
                }
              }
            }
          ]
        },
        {
          "ruleId": "AsyncifyVariable",
          "level": "error",
          "message": "This variable access could benefit from the use of Task async.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 30,
                  "endLine": 145,
                  "endColumn": 51
                }
              }
            }
          ]
        },
        {
          "ruleId": "S2325",
          "level": "error",
          "message": "Make 'BuildGraphQlSelection' a static method.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/TestFixture.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 38,
                  "endLine": 56,
                  "endColumn": 59
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonMutation.cs",
                "region": {
                  "startLine": 18,
                  "startColumn": 13,
                  "endLine": 18,
                  "endColumn": 43
                }
              }
            }
          ]
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 21,
                  "endLine": 124,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0051",
          "level": "error",
          "message": "Method is too long (77 lines; maximum allowed: 60)",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/UpdateTests.cs",
                "region": {
                  "startLine": 97,
                  "startColumn": 27,
                  "endLine": 97,
                  "endColumn": 44
                }
              }
            }
          ]
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/UpdateTests.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 21,
                  "endLine": 114,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMapContextTests.cs",
                "region": {
                  "startLine": 98,
                  "startColumn": 17,
                  "endLine": 98,
                  "endColumn": 54
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMapContextTests.cs",
                "region": {
                  "startLine": 100,
                  "startColumn": 17,
                  "endLine": 100,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMapContextTests.cs",
                "region": {
                  "startLine": 101,
                  "startColumn": 17,
                  "endLine": 101,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMapContextTests.cs",
                "region": {
                  "startLine": 102,
                  "startColumn": 17,
                  "endLine": 102,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMapContextTests.cs",
                "region": {
                  "startLine": 103,
                  "startColumn": 17,
                  "endLine": 103,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMapContextTests.cs",
                "region": {
                  "startLine": 118,
                  "startColumn": 21,
                  "endLine": 118,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMapContextTests.cs",
                "region": {
                  "startLine": 121,
                  "startColumn": 21,
                  "endLine": 121,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMapContextTests.cs",
                "region": {
                  "startLine": 124,
                  "startColumn": 21,
                  "endLine": 124,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S2325",
          "level": "error",
          "message": "Make 'JsonEquals' a static method.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/TestFixture.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 21,
                  "endLine": 87,
                  "endColumn": 31
                }
              }
            }
          ]
        },
        {
          "ruleId": "CC0030",
          "level": "note",
          "message": "This variable can be made const.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 268,
                  "startColumn": 21,
                  "endLine": 282,
                  "endColumn": 4
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/UpdateTests.cs",
                "region": {
                  "startLine": 71,
                  "startColumn": 17,
                  "endLine": 71,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/UpdateTests.cs",
                "region": {
                  "startLine": 72,
                  "startColumn": 17,
                  "endLine": 72,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0076",
          "level": "note",
          "message": "Do not use implicit culture-sensitive ToString in interpolated strings",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/Repositories/PersonRepository.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 75,
                  "endLine": 139,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0051",
          "level": "error",
          "message": "Method is too long (152 lines; maximum allowed: 60)",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 21,
                  "startColumn": 21,
                  "endLine": 21,
                  "endColumn": 33
                }
              }
            }
          ]
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 110,
                  "startColumn": 21,
                  "endLine": 110,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1212",
          "level": "note",
          "message": "Remove redundant assignment",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 50,
                  "startColumn": 25,
                  "endLine": 50,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0051",
          "level": "error",
          "message": "Method is too long (92 lines; maximum allowed: 60)",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 25,
                  "startColumn": 16,
                  "endLine": 25,
                  "endColumn": 27
                }
              }
            }
          ]
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 38,
                  "startColumn": 25,
                  "endLine": 38,
                  "endColumn": 28
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 61,
                  "startColumn": 21,
                  "endLine": 61,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0076",
          "level": "note",
          "message": "Do not use implicit culture-sensitive ToString in interpolated strings",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/Repositories/PersonRepository.cs",
                "region": {
                  "startLine": 88,
                  "startColumn": 75,
                  "endLine": 88,
                  "endColumn": 90
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 21,
                  "endLine": 87,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0042",
          "level": "note",
          "message": "Use await instead of 'Result'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 26,
                  "endLine": 142,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "Data": "Task_Result",
              "MethodName": null
            }
          }
        },
        {
          "ruleId": "MA0042",
          "level": "note",
          "message": "Use await instead of 'Result'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 31,
                  "endLine": 143,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "Data": "Task_Result",
              "MethodName": null
            }
          }
        },
        {
          "ruleId": "MA0042",
          "level": "note",
          "message": "Use await instead of 'Result'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 35,
                  "endLine": 144,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "Data": "Task_Result",
              "MethodName": null
            }
          }
        },
        {
          "ruleId": "MA0042",
          "level": "note",
          "message": "Use await instead of 'Result'",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 30,
                  "endLine": 145,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "Data": "Task_Result",
              "MethodName": null
            }
          }
        },
        {
          "ruleId": "VSTHRD103",
          "level": "error",
          "message": "Result synchronously blocks. Use await instead.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 40,
                  "endLine": 142,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "customProperties": {
              "AsyncMethodName": "",
              "ExtensionMethodNamespace": ""
            }
          }
        },
        {
          "ruleId": "VSTHRD103",
          "level": "error",
          "message": "Result synchronously blocks. Use await instead.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 50,
                  "endLine": 143,
                  "endColumn": 56
                }
              }
            }
          ],
          "properties": {
            "customProperties": {
              "AsyncMethodName": "",
              "ExtensionMethodNamespace": ""
            }
          }
        },
        {
          "ruleId": "VSTHRD103",
          "level": "error",
          "message": "Result synchronously blocks. Use await instead.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 58,
                  "endLine": 144,
                  "endColumn": 64
                }
              }
            }
          ],
          "properties": {
            "customProperties": {
              "AsyncMethodName": "",
              "ExtensionMethodNamespace": ""
            }
          }
        },
        {
          "ruleId": "VSTHRD103",
          "level": "error",
          "message": "Result synchronously blocks. Use await instead.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 145,
                  "startColumn": 45,
                  "endLine": 145,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "customProperties": {
              "AsyncMethodName": "",
              "ExtensionMethodNamespace": ""
            }
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 337,
                  "startColumn": 13,
                  "endLine": 337,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "ParallelChecker",
          "level": "note",
          "message": "Detection in 34 ms (0 issues) *",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/EntityMapContextTests.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 130,
                  "endColumn": 1
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/UpdateTests.cs",
                "region": {
                  "startLine": 152,
                  "startColumn": 17,
                  "endLine": 152,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/UpdateTests.cs",
                "region": {
                  "startLine": 153,
                  "startColumn": 17,
                  "endLine": 153,
                  "endColumn": 58
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQLTests.cs",
                "region": {
                  "startLine": 277,
                  "startColumn": 13,
                  "endLine": 277,
                  "endColumn": 65
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0076",
          "level": "note",
          "message": "Do not use implicit culture-sensitive ToString in interpolated strings",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/Repositories/PersonRepository.cs",
                "region": {
                  "startLine": 114,
                  "startColumn": 74,
                  "endLine": 114,
                  "endColumn": 88
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0051",
          "level": "error",
          "message": "Method is too long (80 lines; maximum allowed: 60)",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/QueryBuilders/PersonQueryBuilder.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 32,
                  "endLine": 28,
                  "endColumn": 37
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0001",
          "level": "note",
          "message": "Use an overload of 'Replace' that has a StringComparison parameter",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/TestFixture.cs",
                "region": {
                  "startLine": 150,
                  "startColumn": 40,
                  "endLine": 150,
                  "endColumn": 92
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0051",
          "level": "error",
          "message": "Method is too long (152 lines; maximum allowed: 60)",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 179,
                  "startColumn": 27,
                  "endLine": 179,
                  "endColumn": 44
                }
              }
            }
          ]
        },
        {
          "ruleId": "SCS0002",
          "level": "error",
          "message": "Potential SQL injection vulnerability was found where 'String' in 'string NpgsqlCommand.CommandText' may be tainted by user-controlled data from 'string NpgsqlCommand.CommandText' in method 'string NpgsqlCommand.CommandText'.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/TestFixture.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 13,
                  "endLine": 163,
                  "endColumn": 32
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/TestFixture.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 13,
                  "endLine": 163,
                  "endColumn": 32
                }
              }
            }
          ]
        },
        {
          "ruleId": "RCS1118",
          "level": "note",
          "message": "Mark local variable as const",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 268,
                  "startColumn": 21,
                  "endLine": 268,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "RCS1212",
          "level": "note",
          "message": "Remove redundant assignment",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 208,
                  "startColumn": 25,
                  "endLine": 208,
                  "endColumn": 38
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CA2100",
          "level": "error",
          "message": "Review if the query string passed to 'string NpgsqlCommand.CommandText' in 'TeardownDatabase', accepts any user input",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/TestFixture.cs",
                "region": {
                  "startLine": 163,
                  "startColumn": 13,
                  "endLine": 163,
                  "endColumn": 86
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 34,
                  "startColumn": 13,
                  "endLine": 34,
                  "endColumn": 55
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 57,
                  "startColumn": 13,
                  "endLine": 57,
                  "endColumn": 60
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonQuery.cs",
                "region": {
                  "startLine": 80,
                  "startColumn": 13,
                  "endLine": 80,
                  "endColumn": 40
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonType.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 13,
                  "endLine": 15,
                  "endColumn": 38
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonType.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 13,
                  "endLine": 19,
                  "endColumn": 48
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonType.cs",
                "region": {
                  "startLine": 23,
                  "startColumn": 13,
                  "endLine": 23,
                  "endColumn": 47
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonType.cs",
                "region": {
                  "startLine": 27,
                  "startColumn": 13,
                  "endLine": 27,
                  "endColumn": 59
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonType.cs",
                "region": {
                  "startLine": 31,
                  "startColumn": 13,
                  "endLine": 31,
                  "endColumn": 54
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonType.cs",
                "region": {
                  "startLine": 35,
                  "startColumn": 13,
                  "endLine": 35,
                  "endColumn": 54
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonType.cs",
                "region": {
                  "startLine": 39,
                  "startColumn": 13,
                  "endLine": 39,
                  "endColumn": 44
                }
              }
            }
          ]
        },
        {
          "ruleId": "MA0056",
          "level": "error",
          "message": "Do not call overridable members in constructor",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/GraphQL/PersonType.cs",
                "region": {
                  "startLine": 43,
                  "startColumn": 13,
                  "endLine": 43,
                  "endColumn": 49
                }
              }
            }
          ]
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 40,
                  "startColumn": 21,
                  "endLine": 40,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 54,
                  "startColumn": 21,
                  "endLine": 54,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 92,
                  "startColumn": 21,
                  "endLine": 92,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 137,
                  "startColumn": 17,
                  "endLine": 137,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 138,
                  "startColumn": 17,
                  "endLine": 138,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 139,
                  "startColumn": 17,
                  "endLine": 139,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 140,
                  "startColumn": 17,
                  "endLine": 140,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 141,
                  "startColumn": 17,
                  "endLine": 141,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 142,
                  "startColumn": 17,
                  "endLine": 142,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 143,
                  "startColumn": 17,
                  "endLine": 143,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 144,
                  "startColumn": 17,
                  "endLine": 144,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 198,
                  "startColumn": 21,
                  "endLine": 198,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 212,
                  "startColumn": 21,
                  "endLine": 212,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 250,
                  "startColumn": 21,
                  "endLine": 250,
                  "endColumn": 51
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 295,
                  "startColumn": 17,
                  "endLine": 295,
                  "endColumn": 39
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 296,
                  "startColumn": 17,
                  "endLine": 296,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 297,
                  "startColumn": 17,
                  "endLine": 297,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 298,
                  "startColumn": 17,
                  "endLine": 298,
                  "endColumn": 57
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 299,
                  "startColumn": 17,
                  "endLine": 299,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 300,
                  "startColumn": 17,
                  "endLine": 300,
                  "endColumn": 82
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 301,
                  "startColumn": 17,
                  "endLine": 301,
                  "endColumn": 45
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "FAA0002",
          "level": "note",
          "message": "Use FluentAssertions equivalent",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/InsertTests.cs",
                "region": {
                  "startLine": 302,
                  "startColumn": 17,
                  "endLine": 302,
                  "endColumn": 68
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0038",
          "level": "note",
          "message": "Make method static (deprecated, use CA1822 instead)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/TestFixture.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 38,
                  "endLine": 56,
                  "endColumn": 59
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "MA0038",
          "level": "note",
          "message": "Make method static (deprecated, use CA1822 instead)",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///D:/GitHub/AdaskoTheBeAsT.Dapper.GraphQL/test/integ/AdaskoTheBeAsT.Dapper.GraphQL.PostgreSql.IntegrationTest/TestFixture.cs",
                "region": {
                  "startLine": 87,
                  "startColumn": 21,
                  "endLine": 87,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "AsyncifyVariable": {
          "id": "AsyncifyVariable",
          "shortDescription": "Use Task Async",
          "fullDescription": "Analyzes code for potential usage of the Task Asynchronous Programming model.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/en-us/library/hh873175(v=vs.110).aspx",
          "properties": {
            "category": "Async",
            "isEnabledByDefault": true
          }
        },
        "CA2100": {
          "id": "CA2100",
          "shortDescription": "Review SQL queries for security vulnerabilities",
          "fullDescription": "SQL queries that directly use user input can be vulnerable to SQL injection attacks. Review this SQL query for potential vulnerabilities, and consider using a parameterized SQL query.",
          "defaultLevel": "warning",
          "helpUri": "https://learn.microsoft.com/dotnet/fundamentals/code-analysis/quality-rules/ca2100",
          "properties": {
            "category": "Security",
            "isEnabledByDefault": false,
            "tags": [
              "PortedFromFxCop",
              "Dataflow",
              "Telemetry",
              "EnabledRuleInAggressiveMode"
            ]
          }
        },
        "CC0021": {
          "id": "CC0021",
          "shortDescription": "Use nameof",
          "fullDescription": "In C#6 the nameof() operator should be used to specify the name of a program element instead of a string literal as it produce code that is easier to refactor.",
          "defaultLevel": "warning",
          "helpUri": "https://code-cracker.github.io/diagnostics/CC0021.html",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true
          }
        },
        "CC0030": {
          "id": "CC0030",
          "shortDescription": "Make Local Variable Constant.",
          "fullDescription": "This variable is assigned a constant value and never changed it can be made 'const'",
          "defaultLevel": "note",
          "helpUri": "https://code-cracker.github.io/diagnostics/CC0030.html",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true
          }
        },
        "FAA0002": {
          "id": "FAA0002",
          "shortDescription": "Replace Xunit assertion with Fluent Assertions equivalent",
          "defaultLevel": "note",
          "properties": {
            "category": "FluentAssertionTips",
            "isEnabledByDefault": true
          }
        },
        "MA0001": {
          "id": "MA0001",
          "shortDescription": "StringComparison is missing",
          "defaultLevel": "note",
          "helpUri": "https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0001.md",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true
          }
        },
        "MA0038": {
          "id": "MA0038",
          "shortDescription": "Make method static (deprecated, use CA1822 instead)",
          "defaultLevel": "note",
          "helpUri": "https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0038.md",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true
          }
        },
        "MA0042": {
          "id": "MA0042",
          "shortDescription": "Do not use blocking calls in an async method",
          "defaultLevel": "note",
          "helpUri": "https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0042.md",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true
          }
        },
        "MA0051": {
          "id": "MA0051",
          "shortDescription": "Method is too long",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0051.md",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true
          }
        },
        "MA0056": {
          "id": "MA0056",
          "shortDescription": "Do not call overridable members in constructor",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0056.md",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true
          }
        },
        "MA0076": {
          "id": "MA0076",
          "shortDescription": "Do not use implicit culture-sensitive ToString in interpolated strings",
          "defaultLevel": "note",
          "helpUri": "https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0076.md",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true
          }
        },
        "ParallelChecker": {
          "id": "ParallelChecker",
          "shortDescription": "Concurrency Issue Detection",
          "defaultLevel": "note",
          "helpUri": "https://github.com/blaeser/parallelchecker",
          "properties": {
            "category": "Parallelization",
            "isEnabledByDefault": true
          }
        },
        "RCS1058": {
          "id": "RCS1058",
          "shortDescription": "Use compound assignment",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1058",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "RCS1118": {
          "id": "RCS1118",
          "shortDescription": "Mark local variable as const",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1118",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "RCS1163": {
          "id": "RCS1163",
          "shortDescription": "Unused parameter",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1163",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true,
            "tags": [
              "Unnecessary"
            ]
          }
        },
        "RCS1175": {
          "id": "RCS1175",
          "shortDescription": "Unused 'this' parameter",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1175",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true,
            "tags": [
              "Unnecessary"
            ]
          }
        },
        "RCS1212": {
          "id": "RCS1212",
          "shortDescription": "Remove redundant assignment",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1212",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "RCS1256": {
          "id": "RCS1256",
          "shortDescription": "Invalid argument null check",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1256",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "RCS1266": {
          "id": "RCS1266",
          "shortDescription": "Use raw string literal",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1266",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "S2325": {
          "id": "S2325",
          "shortDescription": "Methods and properties that don't access instance data should be static",
          "fullDescription": "Methods and properties that don’t access instance data should be marked as static for the following reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2325",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "SCS0002": {
          "id": "SCS0002",
          "shortDescription": "Potential SQL injection vulnerability was found where '{0}' in '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.",
          "fullDescription": "The untrusted value passed to the SQL query should be validated.",
          "defaultLevel": "warning",
          "helpUri": "https://security-code-scan.github.io/#SCS0002",
          "properties": {
            "category": "Security",
            "isEnabledByDefault": true
          }
        },
        "VSTHRD103": {
          "id": "VSTHRD103",
          "shortDescription": "Call async methods when in an async method",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD103.md",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true
          }
        }
      }
    }
  ]
}: "Use nameof",
          "fullDescription": "In C#6 the nameof() operator should be used to specify the name of a program element instead of a string literal as it produce code that is easier to refactor.",
          "defaultLevel": "warning",
          "helpUri": "https://code-cracker.github.io/diagnostics/CC0021.html",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true
          }
        },
        "CC0030": {
          "id": "CC0030",
          "shortDescription": "Make Local Variable Constant.",
          "fullDescription": "This variable is assigned a constant value and never changed it can be made 'const'",
          "defaultLevel": "note",
          "helpUri": "https://code-cracker.github.io/diagnostics/CC0030.html",
          "properties": {
            "category": "Performance",
            "isEnabledByDefault": true
          }
        },
        "FAA0002": {
          "id": "FAA0002",
          "shortDescription": "Replace Xunit assertion with Fluent Assertions equivalent",
          "defaultLevel": "note",
          "properties": {
            "category": "FluentAssertionTips",
            "isEnabledByDefault": true
          }
        },
        "MA0001": {
          "id": "MA0001",
          "shortDescription": "StringComparison is missing",
          "defaultLevel": "note",
          "helpUri": "https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0001.md",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true
          }
        },
        "MA0038": {
          "id": "MA0038",
          "shortDescription": "Make method static (deprecated, use CA1822 instead)",
          "defaultLevel": "note",
          "helpUri": "https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0038.md",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true
          }
        },
        "MA0042": {
          "id": "MA0042",
          "shortDescription": "Do not use blocking calls in an async method",
          "defaultLevel": "note",
          "helpUri": "https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0042.md",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true
          }
        },
        "MA0051": {
          "id": "MA0051",
          "shortDescription": "Method is too long",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0051.md",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true
          }
        },
        "MA0056": {
          "id": "MA0056",
          "shortDescription": "Do not call overridable members in constructor",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0056.md",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true
          }
        },
        "MA0076": {
          "id": "MA0076",
          "shortDescription": "Do not use implicit culture-sensitive ToString in interpolated strings",
          "defaultLevel": "note",
          "helpUri": "https://github.com/meziantou/Meziantou.Analyzer/blob/main/docs/Rules/MA0076.md",
          "properties": {
            "category": "Design",
            "isEnabledByDefault": true
          }
        },
        "ParallelChecker": {
          "id": "ParallelChecker",
          "shortDescription": "Concurrency Issue Detection",
          "defaultLevel": "note",
          "helpUri": "https://github.com/blaeser/parallelchecker",
          "properties": {
            "category": "Parallelization",
            "isEnabledByDefault": true
          }
        },
        "RCS1058": {
          "id": "RCS1058",
          "shortDescription": "Use compound assignment",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1058",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "RCS1118": {
          "id": "RCS1118",
          "shortDescription": "Mark local variable as const",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1118",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "RCS1163": {
          "id": "RCS1163",
          "shortDescription": "Unused parameter",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1163",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true,
            "tags": [
              "Unnecessary"
            ]
          }
        },
        "RCS1175": {
          "id": "RCS1175",
          "shortDescription": "Unused 'this' parameter",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1175",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true,
            "tags": [
              "Unnecessary"
            ]
          }
        },
        "RCS1212": {
          "id": "RCS1212",
          "shortDescription": "Remove redundant assignment",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1212",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "RCS1256": {
          "id": "RCS1256",
          "shortDescription": "Invalid argument null check",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1256",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "RCS1266": {
          "id": "RCS1266",
          "shortDescription": "Use raw string literal",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1266",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "S2325": {
          "id": "S2325",
          "shortDescription": "Methods and properties that don't access instance data should be static",
          "fullDescription": "Methods and properties that don’t access instance data should be marked as static for the following reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2325",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "SCS0002": {
          "id": "SCS0002",
          "shortDescription": "Potential SQL injection vulnerability was found where '{0}' in '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.",
          "fullDescription": "The untrusted value passed to the SQL query should be validated.",
          "defaultLevel": "warning",
          "helpUri": "https://security-code-scan.github.io/#SCS0002",
          "properties": {
            "category": "Security",
            "isEnabledByDefault": true
          }
        },
        "VSTHRD103": {
          "id": "VSTHRD103",
          "shortDescription": "Call async methods when in an async method",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD103.md",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true
          }
        }
      }
    }
  ]
}
          "shortDescription": "Concurrency Issue Detection",
          "defaultLevel": "note",
          "helpUri": "https://github.com/blaeser/parallelchecker",
          "properties": {
            "category": "Parallelization",
            "isEnabledByDefault": true
          }
        },
        "RCS1058": {
          "id": "RCS1058",
          "shortDescription": "Use compound assignment",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1058",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "RCS1118": {
          "id": "RCS1118",
          "shortDescription": "Mark local variable as const",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1118",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "RCS1163": {
          "id": "RCS1163",
          "shortDescription": "Unused parameter",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1163",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true,
            "tags": [
              "Unnecessary"
            ]
          }
        },
        "RCS1175": {
          "id": "RCS1175",
          "shortDescription": "Unused 'this' parameter",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1175",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true,
            "tags": [
              "Unnecessary"
            ]
          }
        },
        "RCS1212": {
          "id": "RCS1212",
          "shortDescription": "Remove redundant assignment",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1212",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "RCS1256": {
          "id": "RCS1256",
          "shortDescription": "Invalid argument null check",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1256",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "RCS1266": {
          "id": "RCS1266",
          "shortDescription": "Use raw string literal",
          "defaultLevel": "note",
          "helpUri": "https://josefpihrt.github.io/docs/roslynator/analyzers/RCS1266",
          "properties": {
            "category": "Roslynator",
            "isEnabledByDefault": true
          }
        },
        "S1172": {
          "id": "S1172",
          "shortDescription": "Unused method parameters should be removed",
          "fullDescription": "A typical code smell known as unused function parameters refers to parameters declared in a function but not used anywhere within the function’s body. While this might seem harmless at first glance, it can lead to confusion and potential errors in your code. Disregarding the values passed to such parameters, the function’s behavior will be the same, but the programmer’s intention won’t be clearly expressed anymore. Therefore, removing function parameters that are not being utilized is considered best practice.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1172",
          "properties": {
            "category": "Major Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S2325": {
          "id": "S2325",
          "shortDescription": "Methods and properties that don't access instance data should be static",
          "fullDescription": "Methods and properties that don’t access instance data should be marked as static for the following reasons:",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-2325",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "SCS0002": {
          "id": "SCS0002",
          "shortDescription": "Potential SQL injection vulnerability was found where '{0}' in '{1}' may be tainted by user-controlled data from '{2}' in method '{3}'.",
          "fullDescription": "The untrusted value passed to the SQL query should be validated.",
          "defaultLevel": "warning",
          "helpUri": "https://security-code-scan.github.io/#SCS0002",
          "properties": {
            "category": "Security",
            "isEnabledByDefault": true
          }
        },
        "VSTHRD103": {
          "id": "VSTHRD103",
          "shortDescription": "Call async methods when in an async method",
          "defaultLevel": "warning",
          "helpUri": "https://github.com/Microsoft/vs-threading/blob/main/doc/analyzers/VSTHRD103.md",
          "properties": {
            "category": "Usage",
            "isEnabledByDefault": true
          }
        }
      }
    }
  ]
}